<?php 

/*
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms.
 * By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
  * By considering the terms in the Fibonacci sequence whose values do not exceed four million, 
  * find the sum of the even-valued terms.
 */

namespace Euler;

require_once __DIR__ . "/../../../vendor/autoload.php";

class Problem2Solver extends \Euler\Solver {
	
    public function solve() {
        return $this->sum_fibonacci(4000000-1, function($x) { return ($x%2==0 ? True : False); });
    }
	
    /**
     * sumup all fibonacci number which return true by filter function
     * 
     * @param unknown $limit
     * @param unknown $filter
     * @return number
     */
    private function sum_fibonacci($limit, $filter) {
        $sum = 0;

        $n1 = 0;
        $n2 = 1;

        while(True) {
            $n3 = $n1 + $n2;
            if ($n3 > $limit) break;
            if ($filter($n3)) $sum += $n3;

            $n1 = $n2;
            $n2 = $n3;
        }
        
        return $sum;
    }
}

?>